<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aviator</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css">

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body>
    <div class="container mx-4 my-4 px-4 py-4">
        <div class="row mx-2 my-2 px-2 py-2">
            <div class="col-4">
                <div>
                    <h6>User ID: <span id="userId"></span></h6>
                    <h6>Balance: <span id="user_balance"></span></h6>
                </div>

                <div class="d-flex">
                    <h6> Bet : </h6>
                    <h6 class="bet_text"> - </h6>
                </div>

                <p>
                <h6>Game Timer : </h6>
                <div class="game_timer"></div>
                </p>

                <p>
                <h6>Cashout multiplyer : </h6>
                <div class="timer"></div>
                </p>
            </div>
        </div>
        <div class="row mx-2 my-2 px-2 py-2">
            <div class="col-4">
                <button type="button" id="play" onclick="roundStart()">Play</button>
                <button type="button" id="end" onclick="roundEnd()" disabled="disabled">End</button>
            </div>

        </div>
        <div class="row mx-2 my-2 px-2 py-2 ">
            <div class="col-4">
                <input type="text" placeholder="Enter bet amount" name="betAmount" id="betAmount" required />
            </div>
            <div class="col-4 ">
                <button type="button" id="bet" onClick="bet()">Bet</button>
                <button type="button" id="cancel" onClick="cancel()" disabled="disabled">Cancel</button>
            </div>
        </div>
    </div>



    <script>

        const socket = io("http://localhost:3000")

        const gameId = '6666f1bd704df0066adfc878';
        let currency = "INR";
        let roundId = false;
        let isBet = '';
        let isCashOut = false;
        let intervalId = '';
        let multiplyer = 0.1
        let betAmount = 0;
        const timeOut = 2000; // set time for game end , game will end after 2000 ms.

        const user = Math.floor(Math.random() * (100000 - 10000 + 1)) + 10000;
        let userBalance = 500;

        document.getElementById('user_balance').textContent = userBalance;
        
        socket.on('connect', () => {
            socket.emit('user_connected', {  userBalance });
        });

        // socket.on('first', () => {
        //     const gameData = {
        //             gameId: gameId,
        //             betAmount: betAmount,
        //         currency: currency,
        //         user: user,
        //     }
        //     socket.emit("round_start", gameData)
        // });
        
        socket.on("initial_state", (data) => {
            $("#user_balance").text(data.balance);
            document.getElementById('userId').textContent = data.user;
        });

        socket.on("update_game_timer", (gameTimer) => {
            $(".game_timer").text(gameTimer.toFixed(2));
        });

        socket.on('round_started', (data) => {
            roundId = data?.roundId
            $("#play").attr('disabled', 'true');
            $("#end").removeAttr('disabled');
            $("#bet").removeAttr('disabled');

            if (isBet == 'future') {
                $("#bet").removeAttr("disabled").text("CashOut");
                $("#cancel").attr('disabled', true)

                const betAmount = $("#betAmount").val()
                userBalance -= betAmount
                $("#user_balance").text(userBalance)
                isBet = 'current';

                socket.emit('update_multiplier');

                intervalId = setInterval(() => {
                    multiplyer += (0.1 * betAmount)
                    $(".timer").text(multiplyer.toFixed(2))
                }, 100)
            } 
            $("#cancel").attr('disabled', true);

            // const myTimeout = setTimeout(() => {
            //     roundEnd();
            //     clearTimeout(myTimeout);
            // }, timeOut)


        })

        socket.on('round_ended', (data) => {
            roundId = false;
            if (isBet == 'current') {
                isBet = '';
                $(".bet_text").text(' ');
                betAmount = 0;
            }
            isCashOut = false;

            multiplyer = 0.1;
            gameTimer = 0.1;
            $("#play").removeAttr('disabled');
            $("#betAmount").removeAttr('disabled');
            $("#end").attr('disabled', true);
            $("#bet").text('Bet')
            clearInterval(intervalId)
            $(".timer").text('');

            // const timeout = setTimeout(() => { 
            //     roundStart();
            //     clearTimeout(timeout)
            // }, 500)

        })

        socket.on('bet', () => {
            $("#cancel").attr('disabled', false);
        })

        socket.on('cash_out', (data) => {
            isCashOut = true;
            isBet = '';
            betAmount = '';
            multiplyer = 0.1 ;
            $(".bet_text").text('');
            $("#bet").removeAttr('disabled').text('Bet');
            $("#betAmount").removeAttr('disabled');
            userBalance = data.balance ? data.balance : userBalance;
            $("#user_balance").text(userBalance)
            socket.off('update_game_timer');
        })

        function roundStart() {
            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                balance: userBalance
            }
            socket.emit("round_start", gameData)
        }

        function roundEnd() {
            $(".timer").text('');

            const gameData = {
                gameId: gameId,
            }
            socket.emit("round_end", gameData)
        }

        function bet() {

            betAmount = $("#betAmount").val()
            if (betAmount == '') {
                alert('Please enter bet amount');
                return false;
            }
            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                balance: userBalance
            }

            if (isBet == '') {

                $("#bet").attr('disabled', true);
                $(".bet_text").text(betAmount);
                $("#betAmount").attr('disabled', true)
                socket.emit('bet', gameData)
                isBet = 'future';

            } else if (isBet == 'current' && Boolean(roundId) == true) {
                cashout()
            }
        }

        function cashout() {
            clearInterval(intervalId)

            let co = multiplyer.toFixed(2)
            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                balance: userBalance,
                cashout: co
            }
            socket.emit('cash_out', gameData)
        }

        function cancel() {
            isBet = '';
            $("#cancel").attr('disabled', true);
            $("#betAmount").removeAttr('disabled')
            $("#bet").removeAttr('disabled')
            $(".bet_text").text(' ');

            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                // balance: userBalance
            }
            socket.emit('cancel_bet', gameData)
        }


    </script>
</body>

</html>