<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aviator</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css">

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>

<body>
    <div class="container mx-4 my-4 px-4 py-4">
        <div class="row mx-2 my-2 px-2 py-2">
            <div class="col-4">
                <div class="d-flex gap-2 mb-2">
                    <h6> User : </h6>
                    <select name="user" id="user">
                        <option value="user1">user1</option>
                        <option value="user2">user2</option>
                        <option value="user3">user3</option>
                        <option value="user4">user4</option>
                        <option value="user5">user5</option>
                        <option value="user6">user6</option>
                        <option value="user7">user7</option>
                        <option value="user8">user8</option>
                        <option value="user9">user9</option>
                        <option value="user10">user10</option>
                    </select>
                </div>

                <div class="d-flex">
                    <h6> Balance : </h6>
                    <h6 class="user_balance"> 500 </h6>
                </div>

                <div class="d-flex">
                    <h6> Bet : </h6>
                    <h6 class="bet_text"> - </h6>
                </div>

                <p>
                <h6>Game Timer : </h6>
                <div class="game_timer"></div>
                </p>

                <p>
                <h6>Cashout multiplyer : </h6>
                <div class="timer"></div>
                </p>
            </div>
        </div>
        <div class="row mx-2 my-2 px-2 py-2">
            <div class="col-4">
                <button type="button" id="play" onClick="roundStart()">Play</button>
                <button type="button" id="end" onClick="roundEnd()" disabled="disabled">End</button>
            </div>

        </div>
        <div class="row mx-2 my-2 px-2 py-2 ">
            <div class="col-4">
                <input type="text" placeholder="Enter bet amount" name="betAmount" id="betAmount" />
            </div>
            <div class="col-4 ">
                <button type="button" id="bet" onClick="bet()">Bet</button>
                <button type="button" id="cancel" onClick="cancel()" disabled="disabled">Cancel</button>
            </div>
        </div>
    </div>



    <script>

        const socket = io("http://localhost:3000")
        socket.on("connect")

        let roundId = false;
        let isBet = '';
        let isCashOut = false;
        let user = $("#user").val();
        let balance = 500;
        let currency = "INR";
        const gameId = '6666f1bd704df0066adfc878';
        let intervalId = '';
        let gameIntervalId = '';
        let multiplyer = 0.1
        let gameTimer = 0.1

        socket.on('round_start', (data) => {
            console.log("got here", data)
            roundId = data?.roundId
            balance = data.balance
            $(".user_balance").text(data.balance);
            $("#play").attr('disabled', 'true');
            $("#end").removeAttr('disabled');
            $("#bet").removeAttr('disabled');

            if (isBet == 'future') {
                $("#bet").removeAttr("disabled").text("CashOut");
                $("#cancel").attr('disabled', true)
                isBet = 'current';

                intervalId = setInterval(() => {
                    multiplyer += 0.1
                    $(".timer").text(multiplyer.toPrecision(2))
                }, 500)
            }
            $("#cancel").attr('disabled', true);


            gameIntervalId = setInterval(() => {
                gameTimer += 0.1
                $(".game_timer").text(gameTimer.toPrecision(2))
            }, 500)


        })

        socket.on('round_end', (data) => {
            roundId = false;
            if (isBet == 'current') {
                isBet = '';
            }
            isCashOut = false;

            multiplyer = 0.1;
            gameTimer = 0.1;
            $("#play").removeAttr('disabled');
            $("#betAmount").removeAttr('disabled');
            $("#end").attr('disabled', true);
            $("#bet").text('Bet')
            clearInterval(intervalId)
            clearInterval(gameIntervalId)
        })

        socket.on('bet', () => {
            $("#cancel").attr('disabled', false);
        })

        socket.on('cash_out', (data) => {
            console.log('back here')
            isCashOut = true;
            isBet = '';
            $("#bet").removeAttr('disabled').text('Bet');
            $("#betAmount").removeAttr('disabled');
            balance = data.balance;
            $(".user_balance").text(balance)
        })

        function roundStart() {
            const betAmount = $("#betAmount").val()
            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                balance: balance
            }
            socket.emit("round_start", gameData)
        }
        function roundEnd() {
            const gameData = {
                gameId: gameId,
                result: gameTimer.toPrecision(2)
            }
            socket.emit("round_end", (gameData))
        }
        function bet() {

            const betAmount = $("#betAmount").val()
            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                balance: balance
            }

            if (isBet == '') {

                $("#bet").attr('disabled', true);
                $(".bet_text").text(betAmount);
                $("#betAmount").attr('disabled', true)
                socket.emit('bet', gameData)
                isBet = 'future';

            } else if (isBet == 'current' && Boolean(roundId) == true) {
                cashout()
            }
        }
        function cashout() {
            clearInterval(intervalId)
            console.log(multiplyer)
            const betAmount = $("#betAmount").val()
            let co = multiplyer.toPrecision(2)
            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                balance: balance,
                cashout: co
            }
            socket.emit('cash_out', gameData)
        }

        function cancel() {
            isBet = '';
            $("#cancel").attr('disabled', true);
            $("#betAmount").removeAttr('disabled')
            $("#bet").removeAttr('disabled')
            $(".bet_text").text('-');
            const betAmount = $("#betAmount").val();
            const gameData = {
                gameId: gameId,
                betAmount: betAmount,
                currency: currency,
                user: user,
                balance: balance
            }
            socket.emit('cancel_bet', gameData)
        }


    </script>
</body>

</html>